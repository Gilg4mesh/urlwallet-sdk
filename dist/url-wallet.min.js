var UrlWallet=function(e){var s={};function n(t){if(s[t])return s[t].exports;var r=s[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=s,n.d=function(e,s,t){n.o(e,s)||Object.defineProperty(e,s,{enumerable:!0,get:t})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,s){if(1&s&&(e=n(e)),8&s)return e;if(4&s&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(n.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&s&&"string"!=typeof e)for(var r in e)n.d(t,r,function(s){return e[s]}.bind(null,r));return t},n.n=function(e){var s=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(s,"a",s),s},n.o=function(e,s){return Object.prototype.hasOwnProperty.call(e,s)},n.p="",n(n.s=0)}([function(e,s,n){"use strict";n.r(s);var t=class{constructor(e,s,n){this.provider=e,this.port=s,this.methodMap=new Map([["send",this.send],["currentAddress",this.getCurrentAddress]]),this.sendRoutingMap=new Map([]),this.queue=new Map,this.onqueuechange=null,this.currentAddress=null,this._incomingHandler=this._handleRpc.bind(this),this._outgoingHandler=this._handleNotif.bind(this),this.provider.sendAsync?(console.warn('The provider is probably not EIP-1193 compliant. Will send with legacy, callback-based method "sendAsync".'),this.sendAsync=this._sendAsyncLegacy):this.sendAsync=this._sendAsync}bindSubscriptionEvents(e){let s=null;return e?s=e:(s=this.provider,"CustomProvider"==this.provider.host&&(s=this.provider.connection)),!(!s||!s.on||(s.on("data",(e,s)=>{if(e)throw e;return this._outgoingHandler(s)}),0))}_queueChange(e,s){if(this.onqueuechange)if(s)this.onqueuechange(e,null,this.queue);else{const s=this.queue.get(e);this.onqueuechange(e,s,this.queue)}}_handleRpc(e){const{method:s}=e.data;if(null==s)return void console.error("No method provided");const n=this.methodMap.get(s);if(null==n)return void console.error(`No such method "${s}".`);let t=s;"send"==s&&(t+=` "${e.data.payload.method}"`);const r=Symbol(t);this.queue.set(r,"pending"),this._queueChange(r,!1);const{nonce:o,payload:i}=e.data;return n.bind(this)(i).then(e=>{this.port.postMessage({nonce:o,response:e}),this.queue.set(r,"resolved"),this._queueChange(r,!1)}).catch(e=>{this.port.postMessage({nonce:o,error:e}),this.queue.set(r,"rejected"),this._queueChange(r,!1)})}_handleNotif(e){this.port.postMessage({notification:e})}send(e){return"string"==typeof e?Promise.reject(new Error("Invalid JSON-RPC request. send() only allows an object as its payload.")):(console.log('MyRPC forwarding "send":',e),this.sendRoutingMap.has(e.method)?this.sendRoutingMap.get(e.method)(e):this.sendAsync(e))}_sendAsyncLegacy(e){return new Promise((s,n)=>{this.provider.sendAsync(e,(e,t)=>{null!=e?n(e):s(t.result)})})}_sendAsync(e){return this.provider.sendPayload?(e.jsonrpc="2.0",e.id=1,this.provider.sendPayload(e).then(e=>{if(e.error)throw e.error;return e.result})):this.provider.send(e.method,e.param)}getCurrentAddress(){return"selectedAddress"in this.provider?Promise.resolve([this.provider.selectedAddress]):Promise.resolve([this.currentAddress])}};s.default=class{constructor(){this.handshaked=null,this.bridge=null,this.respondToHandshake=this._respondToHandshake.bind(this),this.postMessageHandler=this._postMessageHandler.bind(this),this.windowBlocked=this._windowBlocked.bind(this)}_windowBlocked(e){this.bridge.port.postMessage({windowBlocked:!0})}_respondToHandshake(e,s){null==s?(e.onmessage=this.bridge._incomingHandler,e.postMessage({ok:!0,msg:"handshake ACK"})):(e.onmessage=()=>{},e.postMessage({ok:!1,msg:"handshake failed",error:s}))}_postMessageHandler(e){if(e.origin)if(location.origin!=e.origin)if(console.log("iframe onmessage",e.data,"from",e.origin,e),"handshake"==e.data.method){if(this.handshaked)return void console.warn("Repeated handshake to iframe! Ignoring...");this.handshaked=!0,this.bridge=new t(web3.currentProvider,e.ports[0]),this.respondToHandshake(e.ports[0],null),window.postMessage({method:"handshakeDone"})}else console.error(e);else console.debug("Ignoring self-calling message")}}}]).default;